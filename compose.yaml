# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
      target: final
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
  db:
    image: mcr.microsoft.com/mssql/server:2022-CU12-ubuntu-22.04
    restart: always
    volumes:
      - db-data:/var/opt/mssql
    environment:
      - ACCEPT_EULA="Y"
      - MSSQL_SA_PASSWORD=Welcome01!
      - SA_PID=TournamentManager
    ports:
      - 1433:1433
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Welcome01! -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  # db.configurator:
  #   image: mcr.microsoft.com/mssql/server:2022-CU12-ubuntu-22.04
  #   volumes:
  #     - ./init:/docker-entrypoint-initdb.d
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   command: >
  #     bash -c '
  #     /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P Welcome1 -d master -i docker-entrypoint-initdb.d/init.sql;
  #     echo "All done!";
  #     '
volumes:
  db-data:

